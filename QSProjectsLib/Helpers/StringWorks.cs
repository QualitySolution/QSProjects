using System;
using System.Collections.Generic;

namespace QSProjectsLib
{
	public class StringWorks
	{
		enum PowTwo : ulong
		{
			Pow10 = 1024,
			Pow20 = 1048576,
			Pow30 = 1073741824,
			Pow40 = 1099511627776,
			Pow50 = 1125899906842620,
			Pow60 = 1152921504606850000
		}

		public static Dictionary<string, string> Replaces = new Dictionary<string, string> {
			{ "ООО", "Общество с ограниченной ответственностью" },
			{ "ЗАО", "Закрытое акционерное общество" },
			{ "ОАО", "Открытое акционерное общество" },
			{ "ГорПО", "Городское потребительское общество" },
			{ "РайПО", "Районное потребительское общество" },
			{ "СельПО", "Сельское потребительское общество" },
			{ "НКО", "Некоммерческая организация" },
			{ "ИП", "Индивидуальный предприниматель" },
			{ "ОДО", "Общество с дополнительной ответственностью" },
			{ "ПТ", "Полное товарищество" },
			{ "АО", "Акционерное общество" },
			{ "КТ", "Коммандитное товарищество" },
			{ "ХП", "Хозяйственное партнерство" },
			{ "КФХ", "Крестьянское (фермерское) хозяйство" },
			{ "НП", "Некоммерческое партнерство" },
			{ "ПК", "Потребительский кооператив" },
			{ "ТСН", "Товарищество собственников недвижимости" },
			{ "АНО", "Автономная некоммерческая организация" },
			{ "ФГУП", "Федеральное государственное унитарное предприятие" },
			{ "ГУП", "Государственное унитарное предприятие" },
			{ "МУП", "Муниципальное унитарное предприятие" },
			{ "ГП", "Государственное предприятие" },
			{ "СНТ", "Садоводческое некоммерческое товарищество" },
			{ "ДНТ", "Дачное некоммерческое товарищество" },
			{ "ОНТ", "Огородническое некоммерческое товарищество" },
			{ "СНП", "Садоводческое некоммерческое партнерство" },
			{ "ДНП", "Дачное некоммерческое партнерство" },
			{ "ОНП", "Огородническое некоммерческое партнерство" },
			{ "СПК", "Садоводческий потребительский кооператив" },
			{ "ДПК", "Дачный потребительский кооператив" },
			{ "ОПК", "Огороднический потребительский кооператив" },
			{ "ГБПОУ", "Государственное бюджетное профессиональное образовательное учреждение" },
			{ "МБУ", "Муниципальное бюджетное учреждение" },
			{ "ФБУН", "Федеральное бюджетное учреждение науки" },
			{ "ГБУ ЛО", "Государственное бюджетное учреждение ленинградской области" },
			{ "ГБУ", "Государственное бюджетное учреждение" },
			{ "ПАО", "Публичное акционерное общество" },
			{ "ФКП", "Федеральное казенное предприятие" },
			{ "АМО", "Администрация муниципального образования" },
			{ "МКУ", "Муниципальное казенное учреждение" },
			{ "МС", "Муниципальный совет" },
			{ "МА", "Местная администрация" },
			{ "СПБГБУ", "Санкт-Петербургское государственное бюджетное учреждение" },
			{ "СПБГАУК", "Санкт-Петербургское государственное автономное учреждение культуры" },
			{ "СПБГБУК", "Санкт-Петербургское государственное бюджетное учреждение культуры" },
			{ "ФГБУН", "Федеральное государственное бюджетное учреждение науки" },
			{ "МКУК", "Муниципальное казенное учреждение культуры" }
		};

		public static string BytesToIECUnitsString (ulong bytes)
		{
			if (bytes < (ulong)PowTwo.Pow10)
				return String.Format ("{0} Б", bytes);
			else if (bytes < (ulong)PowTwo.Pow20)
				return String.Format ("{0:N1} КиБ", (double)bytes / (ulong)PowTwo.Pow10);
			else if (bytes < (ulong)PowTwo.Pow30)
				return String.Format ("{0:N1} МиБ", (double)bytes / (ulong)PowTwo.Pow20);
			else if (bytes < (ulong)PowTwo.Pow40)
				return String.Format ("{0:N1} ГиБ", (double)bytes / (ulong)PowTwo.Pow30);
			else if (bytes < (ulong)PowTwo.Pow50)
				return String.Format ("{0:N1} ТиБ", (double)bytes / (ulong)PowTwo.Pow40);
			else if (bytes < (ulong)PowTwo.Pow60)
				return String.Format ("{0:N1} ПиБ", (double)bytes / (ulong)PowTwo.Pow50);
			else
				return String.Format ("{0:N1} ЭиБ", (double)bytes / (ulong)PowTwo.Pow60);
		}
	}
}


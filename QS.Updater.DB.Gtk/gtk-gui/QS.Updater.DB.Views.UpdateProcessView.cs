
// This file has been generated by the GUI designer. Do not modify.
namespace QS.Updater.DB.Views
{
	public partial class UpdateProcessView
	{
		private global::Gtk.VBox dialog1_VBox;

		private global::Gtk.Label labelDescription;

		private global::Gamma.GtkWidgets.yCheckButton checkCreateBackup;

		private global::Gtk.HBox hbox1;

		private global::Gamma.GtkWidgets.yEntry entryFileName;

		private global::Gtk.Button buttonFileChooser;

		private global::QS.Widgets.ProgressWidget progressbarTotal;

		private global::QS.Widgets.ProgressWidget progressbarOperation;

		private global::Gtk.Expander expander1;

		private global::Gtk.ScrolledWindow GtkScrolledWindow;

		private global::Gamma.GtkWidgets.yTextView textviewLog;

		private global::Gtk.Label GtkLabel2;

		private global::Gtk.HBox hbox2;

		private global::Gtk.Button buttonCancel;

		private global::Gamma.GtkWidgets.yButton buttonExecute;

		protected virtual void Build()
		{
			global::Stetic.Gui.Initialize(this);
			// Widget QS.Updater.DB.Views.UpdateProcessView
			global::Stetic.BinContainer.Attach(this);
			this.Name = "QS.Updater.DB.Views.UpdateProcessView";
			// Container child QS.Updater.DB.Views.UpdateProcessView.Gtk.Container+ContainerChild
			this.dialog1_VBox = new global::Gtk.VBox();
			this.dialog1_VBox.Name = "dialog1_VBox";
			this.dialog1_VBox.BorderWidth = ((uint)(2));
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.labelDescription = new global::Gtk.Label();
			this.labelDescription.Name = "labelDescription";
			this.labelDescription.LabelProp = global::Mono.Unix.Catalog.GetString("После обновления базы, предыдущие версии программы не будут работать. Во избежани" +
					"и порчи данных, убедитесь что в момент обновления никто не использует базу в раб" +
					"оте.");
			this.labelDescription.Wrap = true;
			this.dialog1_VBox.Add(this.labelDescription);
			global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.dialog1_VBox[this.labelDescription]));
			w1.Position = 0;
			w1.Expand = false;
			w1.Fill = false;
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.checkCreateBackup = new global::Gamma.GtkWidgets.yCheckButton();
			this.checkCreateBackup.CanFocus = true;
			this.checkCreateBackup.Name = "checkCreateBackup";
			this.checkCreateBackup.Label = global::Mono.Unix.Catalog.GetString("Создать резервную копию перед обновлением");
			this.checkCreateBackup.Active = true;
			this.checkCreateBackup.DrawIndicator = true;
			this.checkCreateBackup.UseUnderline = true;
			this.dialog1_VBox.Add(this.checkCreateBackup);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.dialog1_VBox[this.checkCreateBackup]));
			w2.Position = 1;
			w2.Expand = false;
			w2.Fill = false;
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.hbox1 = new global::Gtk.HBox();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 6;
			this.hbox1.BorderWidth = ((uint)(6));
			// Container child hbox1.Gtk.Box+BoxChild
			this.entryFileName = new global::Gamma.GtkWidgets.yEntry();
			this.entryFileName.CanFocus = true;
			this.entryFileName.Name = "entryFileName";
			this.entryFileName.IsEditable = false;
			this.entryFileName.InvisibleChar = '●';
			this.hbox1.Add(this.entryFileName);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.hbox1[this.entryFileName]));
			w3.Position = 0;
			// Container child hbox1.Gtk.Box+BoxChild
			this.buttonFileChooser = new global::Gtk.Button();
			this.buttonFileChooser.CanFocus = true;
			this.buttonFileChooser.Name = "buttonFileChooser";
			this.buttonFileChooser.UseUnderline = true;
			global::Gtk.Image w4 = new global::Gtk.Image();
			w4.Pixbuf = global::Stetic.IconLoader.LoadIcon(this, "gtk-directory", global::Gtk.IconSize.Menu);
			this.buttonFileChooser.Image = w4;
			this.hbox1.Add(this.buttonFileChooser);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.hbox1[this.buttonFileChooser]));
			w5.Position = 1;
			w5.Expand = false;
			w5.Fill = false;
			this.dialog1_VBox.Add(this.hbox1);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.dialog1_VBox[this.hbox1]));
			w6.Position = 2;
			w6.Expand = false;
			w6.Fill = false;
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.progressbarTotal = new global::QS.Widgets.ProgressWidget();
			this.progressbarTotal.Name = "progressbarTotal";
			this.dialog1_VBox.Add(this.progressbarTotal);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.dialog1_VBox[this.progressbarTotal]));
			w7.Position = 3;
			w7.Expand = false;
			w7.Fill = false;
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.progressbarOperation = new global::QS.Widgets.ProgressWidget();
			this.progressbarOperation.Name = "progressbarOperation";
			this.dialog1_VBox.Add(this.progressbarOperation);
			global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.dialog1_VBox[this.progressbarOperation]));
			w8.Position = 4;
			w8.Expand = false;
			w8.Fill = false;
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.expander1 = new global::Gtk.Expander(null);
			this.expander1.CanFocus = true;
			this.expander1.Name = "expander1";
			// Container child expander1.Gtk.Container+ContainerChild
			this.GtkScrolledWindow = new global::Gtk.ScrolledWindow();
			this.GtkScrolledWindow.HeightRequest = 246;
			this.GtkScrolledWindow.Name = "GtkScrolledWindow";
			this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
			this.textviewLog = new global::Gamma.GtkWidgets.yTextView();
			this.textviewLog.CanFocus = true;
			this.textviewLog.Name = "textviewLog";
			this.GtkScrolledWindow.Add(this.textviewLog);
			this.expander1.Add(this.GtkScrolledWindow);
			this.GtkLabel2 = new global::Gtk.Label();
			this.GtkLabel2.Name = "GtkLabel2";
			this.GtkLabel2.LabelProp = global::Mono.Unix.Catalog.GetString("Технический журнал");
			this.GtkLabel2.UseUnderline = true;
			this.expander1.LabelWidget = this.GtkLabel2;
			this.dialog1_VBox.Add(this.expander1);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.dialog1_VBox[this.expander1]));
			w11.Position = 5;
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.hbox2 = new global::Gtk.HBox();
			this.hbox2.Name = "hbox2";
			this.hbox2.Spacing = 6;
			// Container child hbox2.Gtk.Box+BoxChild
			this.buttonCancel = new global::Gtk.Button();
			this.buttonCancel.CanFocus = true;
			this.buttonCancel.Name = "buttonCancel";
			this.buttonCancel.UseStock = true;
			this.buttonCancel.UseUnderline = true;
			this.buttonCancel.Label = "gtk-cancel";
			this.hbox2.Add(this.buttonCancel);
			global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(this.hbox2[this.buttonCancel]));
			w12.Position = 0;
			// Container child hbox2.Gtk.Box+BoxChild
			this.buttonExecute = new global::Gamma.GtkWidgets.yButton();
			this.buttonExecute.CanFocus = true;
			this.buttonExecute.Name = "buttonExecute";
			this.buttonExecute.UseStock = true;
			this.buttonExecute.UseUnderline = true;
			this.buttonExecute.Label = "gtk-execute";
			this.hbox2.Add(this.buttonExecute);
			global::Gtk.Box.BoxChild w13 = ((global::Gtk.Box.BoxChild)(this.hbox2[this.buttonExecute]));
			w13.Position = 1;
			this.dialog1_VBox.Add(this.hbox2);
			global::Gtk.Box.BoxChild w14 = ((global::Gtk.Box.BoxChild)(this.dialog1_VBox[this.hbox2]));
			w14.Position = 6;
			w14.Expand = false;
			w14.Fill = false;
			this.Add(this.dialog1_VBox);
			if ((this.Child != null))
			{
				this.Child.ShowAll();
			}
			this.progressbarOperation.Hide();
			this.Show();
			this.checkCreateBackup.Toggled += new global::System.EventHandler(this.OnCheckCreateBackupToggled);
			this.buttonFileChooser.Clicked += new global::System.EventHandler(this.OnButtonFileChooserClicked);
			this.buttonCancel.Clicked += new global::System.EventHandler(this.OnButtonCancelClicked);
			this.buttonExecute.Clicked += new global::System.EventHandler(this.OnButtonExecuteClicked);
		}
	}
}
